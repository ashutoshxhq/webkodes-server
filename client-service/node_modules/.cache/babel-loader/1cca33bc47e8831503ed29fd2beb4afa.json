{"ast":null,"code":"/*! topbar 0.1.3, 2014-12-09\n *  http://buunguyen.github.io/topbar\n *  Copyright (c) 2014 Buu Nguyen\n *  Licensed under the MIT License */\n;\n(function (window, document) {\n  'use strict';\n\n  (function () {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  })();\n\n  var canvas,\n      progressTimerId,\n      fadeTimerId,\n      currentProgress,\n      showing,\n      addEvent = function (elem, type, handler) {\n    if (elem.addEventListener) elem.addEventListener(type, handler, false);else if (elem.attachEvent) elem.attachEvent('on' + type, handler);else elem['on' + type] = handler;\n  },\n      options = {\n    autoRun: true,\n    barThickness: 3,\n    barColors: {\n      '0': 'rgba(26,  188, 156, .9)',\n      '.25': 'rgba(52,  152, 219, .9)',\n      '.50': 'rgba(241, 196, 15,  .9)',\n      '.75': 'rgba(230, 126, 34,  .9)',\n      '1.0': 'rgba(211, 84,  0,   .9)'\n    },\n    shadowBlur: 10,\n    shadowColor: 'rgba(0,   0,   0,   .6)'\n  },\n      repaint = function () {\n    canvas.width = window.innerWidth;\n    canvas.height = options.barThickness * 5; // need space for shadow\n\n    var ctx = canvas.getContext('2d');\n    ctx.shadowBlur = options.shadowBlur;\n    ctx.shadowColor = options.shadowColor;\n    var lineGradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n\n    for (var stop in options.barColors) lineGradient.addColorStop(stop, options.barColors[stop]);\n\n    ctx.lineWidth = options.barThickness;\n    ctx.beginPath();\n    ctx.moveTo(0, options.barThickness / 2);\n    ctx.lineTo(Math.ceil(currentProgress * canvas.width), options.barThickness / 2);\n    ctx.strokeStyle = lineGradient;\n    ctx.stroke();\n  },\n      createCanvas = function () {\n    canvas = document.createElement('canvas');\n    var style = canvas.style;\n    style.position = 'fixed';\n    style.top = style.left = style.right = style.margin = style.padding = 0;\n    style.zIndex = 100001;\n    style.display = 'none';\n    document.body.appendChild(canvas);\n    addEvent(window, 'resize', repaint);\n  },\n      topbar = {\n    config: function (opts) {\n      for (var key in opts) if (options.hasOwnProperty(key)) options[key] = opts[key];\n    },\n    show: function () {\n      if (showing) return;\n      showing = true;\n      if (fadeTimerId !== null) window.cancelAnimationFrame(fadeTimerId);\n      if (!canvas) createCanvas();\n      canvas.style.opacity = 1;\n      canvas.style.display = 'block';\n      topbar.progress(0);\n\n      if (options.autoRun) {\n        (function loop() {\n          progressTimerId = window.requestAnimationFrame(loop);\n          topbar.progress('+' + .05 * Math.pow(1 - Math.sqrt(currentProgress), 2));\n        })();\n      }\n    },\n    progress: function (to) {\n      if (typeof to === \"undefined\") return currentProgress;\n\n      if (typeof to === \"string\") {\n        to = (to.indexOf('+') >= 0 || to.indexOf('-') >= 0 ? currentProgress : 0) + parseFloat(to);\n      }\n\n      currentProgress = to > 1 ? 1 : to;\n      repaint();\n      return currentProgress;\n    },\n    hide: function () {\n      if (!showing) return;\n      showing = false;\n\n      if (progressTimerId != null) {\n        window.cancelAnimationFrame(progressTimerId);\n        progressTimerId = null;\n      }\n\n      (function loop() {\n        if (topbar.progress('+.1') >= 1) {\n          canvas.style.opacity -= .05;\n\n          if (canvas.style.opacity <= .05) {\n            canvas.style.display = 'none';\n            fadeTimerId = null;\n            return;\n          }\n        }\n\n        fadeTimerId = window.requestAnimationFrame(loop);\n      })();\n    }\n  };\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = topbar;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return topbar;\n    });\n  } else {\n    this.topbar = topbar;\n  }\n}).call(this, window, document);","map":null,"metadata":{},"sourceType":"script"}