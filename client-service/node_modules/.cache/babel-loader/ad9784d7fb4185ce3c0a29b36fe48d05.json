{"ast":null,"code":"import _slicedToArray from \"/home/ashutosh/Projects/Open Cloud/open-cloud/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ashutosh/Projects/Open Cloud/open-cloud/src/pages/Index.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { LoadingContext } from './../store/Store';\n\nfunction Index() {\n  const _useContext = useContext(LoadingContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        setLoading = _useContext2[1];\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  return React.createElement(AnimatedPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Index\")))))))));\n}\n\nconst AnimatedPage = ({\n  children\n}) => {\n  const _useContext3 = useContext(LoadingContext),\n        _useContext4 = _slicedToArray(_useContext3, 1),\n        loading = _useContext4[0];\n\n  if (loading === false) {\n    return {\n      children\n    };\n  } else {\n    React.createElement(\"div\", {\n      class: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Loading\"))))))));\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/ashutosh/Projects/Open Cloud/open-cloud/src/pages/Index.js"],"names":["React","useContext","useEffect","LoadingContext","Index","setLoading","AnimatedPage","children","loading"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAAQC,cAAR,QAA6B,kBAA7B;;AAEA,SAASC,KAAT,GAAiB;AAAA,sBACSH,UAAU,CAACE,cAAD,CADnB;AAAA;AAAA,QACLE,UADK;;AAEbH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFM,EAEL,EAFK,CAAT;AAGE,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADE,CADJ;AAoBL;;AAID,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA,uBACfN,UAAU,CAACE,cAAD,CADK;AAAA;AAAA,QAC1BK,OAD0B;;AAEjC,MAAGA,OAAO,KAAK,KAAf,EAAqB;AACjB,WACI;AAACD,MAAAA;AAAD,KADJ;AAGH,GAJD,MAIM;AACF;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADR;AAeH;AAEF,CAxBH;;AA0BA,eAAeH,KAAf","sourcesContent":["import React, { useContext,useEffect } from 'react';\nimport {LoadingContext} from './../store/Store';\n\nfunction Index() {\n    const [,setLoading] = useContext(LoadingContext);\n    useEffect(() => {\n        setLoading(false)\n      },[]);\n      return (\n          <AnimatedPage>\n        <div class=\"wrapper\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">         \n                                <div>\n                                    <p>Index</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </AnimatedPage>\n    )\n    \n}\n\n\n\nconst AnimatedPage = ({children}) => {\n    const [loading] = useContext(LoadingContext);\n    if(loading === false){\n        return ( \n            {children}\n      );\n    } else{\n        <div class=\"wrapper\">\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card\">\n                                <div class=\"card-body\">         \n                                    <div>\n                                        <p>Loading</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    }\n    \n  };\n  \nexport default Index\n"]},"metadata":{},"sourceType":"module"}